<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.U_to_p_messageMapper">
  <resultMap id="BaseResultMap" type="com.bean.U_to_p_message">
    <id column="photographer_message_id" jdbcType="BIGINT" property="photographerMessageId" />
    <result column="photographer_message_content" jdbcType="VARCHAR" property="photographerMessageContent" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="photographer_id" jdbcType="BIGINT" property="photographerId" />
    <result column="message_create" jdbcType="TIMESTAMP" property="messageCreate" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <!--1.摄影师，获取留言的结果集-->
  <resultMap id="PGetMessages" type="com.bean.U_to_p_message">
    <id column="photographer_message_id" jdbcType="BIGINT" property="photographerMessageId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="photographer_message_content" jdbcType="VARCHAR" property="photographerMessageContent" />
    <result column="message_create" jdbcType="TIMESTAMP" property="messageCreate" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <!--1.摄影师获取信息发送的sql-->
  <sql id="PGet_Messages_List">
       p.photographer_message_id, p.photographer_message_content,  p.message_create,p.user_id,
        u.user_name
    </sql>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    photographer_message_id, photographer_message_content, user_id, photographer_id,
    message_create, user_name
  </sql>
  <!--//1.获取到用户给摄影师留言的实体集合-->
  <!--public List<U_to_p_messages> selectByPhotographerId(Long photographerId);-->
  <select id="selectByPhotographerId" parameterType="long" resultMap="PGetMessages">
    SELECT
    <include refid="PGet_Messages_List"/>
    FROM
    `user` u INNER JOIN u_to_p_message p ON u.user_id=p.user_id
    AND p.photographer_id=#{photographerId};
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from u_to_p_message
    where photographer_message_id = #{photographerMessageId,jdbcType=BIGINT}
  </select>
</mapper>