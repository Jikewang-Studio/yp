<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.Custom_madeMapper">
  <resultMap id="BaseResultMap" type="com.bean.Custom_made">
    <id column="custom_made_id" jdbcType="Integer" property="customMadeId" />
    <result column="college_name" jdbcType="VARCHAR" property="collegeName" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="people_quantity" jdbcType="INTEGER" property="peopleQuantity" />
    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
    <result column="contact_phone_number" jdbcType="VARCHAR" property="contactPhoneNumber" />
    <result column="extra_information" jdbcType="VARCHAR" property="extraInformation" />
    <result column="custom_type" jdbcType="INTEGER" property="customType" />
  </resultMap>
  <!--1.管理者按类型，查询定制信息-->
  <resultMap id="GetCustoms" type="com.bean.Custom_made">
    <id column="custom_made_id" jdbcType="Integer" property="customMadeId" />
    <result column="college_name" jdbcType="VARCHAR" property="collegeName" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="contact_phone_number" jdbcType="VARCHAR" property="contactPhoneNumber" />
    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
    <result column="contact_phone_number" jdbcType="INTEGER" property="contactPhoneNumber" />
    <result column="extra_information" jdbcType="VARCHAR" property="extraInformation" />
    <result column="custom_type" jdbcType="INTEGER" property="customType" />
  </resultMap>

  <!--1.管理者按类型查询发送的sql-->
  <sql id="GetCustoms">
    custom_made_id, college_name, class_name, people_quantity, contact_name, contact_phone_number,custom_type,
    extra_information
  </sql>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    custom_made_id, college_name, class_name, people_quantity, contact_name, contact_phone_number, 
    extra_information, custom_type
  </sql>

  <!--//1.管理者，通过类型查看所有的定制情况-->
  <!--List<Custom_made> selectByCustomType(Integer customType);-->
  <select id="selectByCustomType" parameterType="java.lang.Integer" resultMap="GetCustoms">
    SELECT
    <include refid="GetCustoms"/>
    FROM  custom_made
    WHERE custom_type = #{customType}
  </select>

  <select id="selectByExample" parameterType="com.bean.Custom_madeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from custom_made
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from custom_made
    where custom_made_id = #{customMadeId,jdbcType=Integer}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from custom_made
    where custom_made_id = #{customMadeId,jdbcType=Integer}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.Custom_madeExample">
    delete from custom_made
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!--2.用户添加定制信息-->
  <insert id="insert" parameterType="com.bean.Custom_made">
    insert into custom_made (custom_made_id, college_name, class_name, 
      people_quantity, contact_name, contact_phone_number, 
      extra_information, custom_type)
    values (#{customMadeId,jdbcType=Integer}, #{collegeName,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
      #{peopleQuantity,jdbcType=INTEGER}, #{contactName,jdbcType=VARCHAR}, #{contactPhoneNumber,jdbcType=VARCHAR}, 
      #{extraInformation,jdbcType=VARCHAR}, #{customType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Custom_made">
    insert into custom_made
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customMadeId != null">
        custom_made_id,
      </if>
      <if test="collegeName != null">
        college_name,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="peopleQuantity != null">
        people_quantity,
      </if>
      <if test="contactName != null">
        contact_name,
      </if>
      <if test="contactPhoneNumber != null">
        contact_phone_number,
      </if>
      <if test="extraInformation != null">
        extra_information,
      </if>
      <if test="customType != null">
        custom_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customMadeId != null">
        #{customMadeId,jdbcType=Integer},
      </if>
      <if test="collegeName != null">
        #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="peopleQuantity != null">
        #{peopleQuantity,jdbcType=INTEGER},
      </if>
      <if test="contactName != null">
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhoneNumber != null">
        #{contactPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="extraInformation != null">
        #{extraInformation,jdbcType=VARCHAR},
      </if>
      <if test="customType != null">
        #{customType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.Custom_madeExample" resultType="java.lang.Integer">
    select count(*) from custom_made
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update custom_made
    <set>
      <if test="record.customMadeId != null">
        custom_made_id = #{record.customMadeId,jdbcType=Integer},
      </if>
      <if test="record.collegeName != null">
        college_name = #{record.collegeName,jdbcType=VARCHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.peopleQuantity != null">
        people_quantity = #{record.peopleQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.contactName != null">
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhoneNumber != null">
        contact_phone_number = #{record.contactPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.extraInformation != null">
        extra_information = #{record.extraInformation,jdbcType=VARCHAR},
      </if>
      <if test="record.customType != null">
        custom_type = #{record.customType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update custom_made
    set custom_made_id = #{record.customMadeId,jdbcType=Integer},
      college_name = #{record.collegeName,jdbcType=VARCHAR},
      class_name = #{record.className,jdbcType=VARCHAR},
      people_quantity = #{record.peopleQuantity,jdbcType=INTEGER},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_phone_number = #{record.contactPhoneNumber,jdbcType=VARCHAR},
      extra_information = #{record.extraInformation,jdbcType=VARCHAR},
      custom_type = #{record.customType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Custom_made">
    update custom_made
    <set>
      <if test="collegeName != null">
        college_name = #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="peopleQuantity != null">
        people_quantity = #{peopleQuantity,jdbcType=INTEGER},
      </if>
      <if test="contactName != null">
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhoneNumber != null">
        contact_phone_number = #{contactPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="extraInformation != null">
        extra_information = #{extraInformation,jdbcType=VARCHAR},
      </if>
      <if test="customType != null">
        custom_type = #{customType,jdbcType=INTEGER},
      </if>
    </set>
    where custom_made_id = #{customMadeId,jdbcType=Integer}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Custom_made">
    update custom_made
    set college_name = #{collegeName,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      people_quantity = #{peopleQuantity,jdbcType=INTEGER},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_phone_number = #{contactPhoneNumber,jdbcType=VARCHAR},
      extra_information = #{extraInformation,jdbcType=VARCHAR},
      custom_type = #{customType,jdbcType=INTEGER}
    where custom_made_id = #{customMadeId,jdbcType=Integer}
  </update>
</mapper>